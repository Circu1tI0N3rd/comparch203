#*******************************************************************************
# Creator:        Hai Cao Xuan (caoxuanhaipr@gmail.com)
#
# Additional Contributions by:
#
# File Name:      makefile
# Project Name:   Example
#
#*******************************************************************************
# Copyright (c) 2022 Hai Cao Xuan
#*******************************************************************************

TOPMODULE=top
FILES := include/my_pkg.svh \
						src/button_buffer.sv \
						src/counter.sv \
						src/master.sv

.PHONY: help
help:
	@echo -e "make [option]"
	@echo -e "\tlint    run lint checks for syntax and violations"
	@echo -e "\tsview   view schematics"
	@echo -e "\tbuild   verilate and build modules"
	@echo -e "\tsim     run simulation"
	@echo -e "\twave    open waveforms"
	@echo -e "\tclean   clean the working folder"
	@echo -e "\thelp    print this help"

.PHONY: all
all: lint sim

.PHONY: sview
sview: $(TOPMODULE).svg
	brave-browser-beta $(TOPMODULE).svg

$(TOPMODULE).svg: $(TOPMODULE).ys
	yosys $(TOPMODULE).ys
	netlistsvg -o $(TOPMODULE).svg $(TOPMODULE).json

.PHONY: lint
lint:
	@echo -e "-> LINTING"
	verilator -Wall -sv --lint-only $(FILES) $(TOPMODULE).sv --top-module $(TOPMODULE)

.PHONY: build
build: ./obj_dir/V$(TOPMODULE)
./obj_dir/V$(TOPMODULE): $(FILES) $(TOPMODULE).sv tb_$(TOPMODULE).cpp
	@echo -e "[1] -> VERILATING"
	verilator -Wall -sv -cc --trace-fst --coverage $(FILES) $(TOPMODULE).sv --top-module $(TOPMODULE) --exe tb_$(TOPMODULE).cpp
	@echo -e "[2] -> BUILDING"
	make -C obj_dir -f V$(TOPMODULE).mk V$(TOPMODULE)

.PHONY: cunder
cunder: ./obj_dir/V$(TOPMODULE)
	@echo -e "[1] -> VERILATING"
	@rm -rf logs
	verilator -Wall -sv -cc -CFLAGS -DCOVERAGE --trace-fst --coverage-underscore $(FILES) $(TOPMODULE).sv --top-module $(TOPMODULE) --exe tb_$(TOPMODULE).cpp
	@echo -e "[2] -> BUILDING"
	make -C obj_dir -f V$(TOPMODULE).mk V$(TOPMODULE)
	@echo -e "-> SIMULATING"
	./obj_dir/V$(TOPMODULE)
	verilator_coverage --annotate logs/annotated --annotate-min 1 --write-info logs/coverage.info logs/coverage.dat
	genhtml logs/coverage.info --output-directory logs/html

.PHONY: ctoggle
ctoggle: ./obj_dir/V$(TOPMODULE)
	@echo -e "[1] -> VERILATING"
	@rm -rf logs
	verilator -Wall -sv -cc -CFLAGS -DCOVERAGE --trace-fst --coverage-toggle $(FILES) $(TOPMODULE).sv --top-module $(TOPMODULE) --exe tb_$(TOPMODULE).cpp
	@echo -e "[2] -> BUILDING"
	make -C obj_dir -f V$(TOPMODULE).mk V$(TOPMODULE)
	@echo -e "-> SIMULATING"
	./obj_dir/V$(TOPMODULE)
	verilator_coverage --annotate logs/annotated --annotate-min 1 --write-info logs/coverage.info logs/coverage.dat
	genhtml logs/coverage.info --output-directory logs/html

.PHONY: cline
cline: ./obj_dir/V$(TOPMODULE)
	@echo -e "[1] -> VERILATING"
	@rm -rf logs
	verilator -Wall -O3 -CFLAGS -DCOVERAGE -sv -cc --trace-fst --coverage-line $(FILES) $(TOPMODULE).sv --top-module $(TOPMODULE) --exe tb_$(TOPMODULE).cpp
	@echo -e "[2] -> BUILDING"
	make -C obj_dir -f V$(TOPMODULE).mk V$(TOPMODULE)
	@echo -e "-> SIMULATING"
	./obj_dir/V$(TOPMODULE)
	verilator_coverage --annotate logs/annotated --annotate-min 1 --write-info logs/coverage.info logs/coverage.dat
	genhtml logs/coverage.info --output-directory logs/html

.PHONY: coverage
coverage: #./obj_dir/V$(TOPMODULE)
	@echo -e "[1] -> VERILATING"
	@rm -rf logs
	verilator -Wall -O3 -CFLAGS -DCOVERAGE -sv -cc --trace-fst --coverage $(FILES) $(TOPMODULE).sv --top-module $(TOPMODULE) --exe tb_$(TOPMODULE).cpp
	@echo -e "[2] -> BUILDING"
	make -C obj_dir -f V$(TOPMODULE).mk V$(TOPMODULE)
	@echo -e "-> SIMULATING"
	./obj_dir/V$(TOPMODULE)
	verilator_coverage --annotate logs/annotated --annotate-min 1 --write-info logs/coverage.info logs/coverage.dat
	#verilator_coverage --annotate logs/annotated --write-info logs/coverage.info logs/coverage.dat
	genhtml logs/coverage.info --output-directory logs/html

.PHONY: sim
sim: ./obj_dir/V$(TOPMODULE)
	@echo -e "-> SIMULATING"
	./obj_dir/V$(TOPMODULE)

.PHONY: wave
wave: $(TOPMODULE).fst
	@echo -e "-> WAVEFORMS"
	@gtkwave $(TOPMODULE).fst wave.gtkw

.PHONY: clean
clean:
	rm -rf obj_dir logs
	rm -f *.fst
	rm -f *.json
	rm -f *.svg
